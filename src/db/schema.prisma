// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Incident {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  message    String
  escalation Int      @default(0)
  status     Int      @default(0)

  service   Service @relation(fields: [serviceId], references: [id])
  serviceId Int

  aknowledger   Target? @relation("aknowledger", fields: [aknowledgerId], references: [id])
  aknowledgerId Int?
  closer        Target? @relation("closer", fields: [closerId], references: [id])
  closerId      Int?

  @@map("incidents")
}

model Service {
  id      Int     @id @default(autoincrement())
  name    String  @unique
  healthy Boolean @default(true)

  incidents Incident[]
  policy    Policy     @relation(fields: [policyId], references: [id])
  policyId  Int

  @@index(name)
  @@map("services")
}

model Policy {
  id   Int    @id @default(autoincrement())
  name String @unique

  policiesLevels PolicyLevel[]
  services       Service[]

  @@index(name)
  @@map("policies")
}

model PolicyLevel {
  // should be greater than 0
  escalation Int

  policy   Policy @relation(fields: [policyId], references: [id])
  policyId Int

  level   Level @relation(fields: [levelId], references: [id])
  levelId Int

  @@id([policyId, escalation])
  @@map("policies_levels")
}

model Level {
  id   Int    @id @default(autoincrement())
  name String @unique

  policiesLevels PolicyLevel[]
  targets        Target[]
  @@index(name)
  @@map("levels")
}

model Target {
  id      Int    @id @default(autoincrement())
  type    Int
  contact String

  levels               Level[]
  aknowledgedIncidents Incident[] @relation("aknowledger")
  closedIncidents      Incident[] @relation("closer")

  @@unique([type, contact])
  @@map("targets")
}
